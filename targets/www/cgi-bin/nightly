#!/usr/bin/python

import os, os.path, re, glob
from color import *

## Configuration #############################################################
## Colors
#
colorBG      = Color( 0xEE, 0xEE, 0xEE )  # Background of page 
colorTH      = Color( 0xA0, 0xE0, 0xFF )  # Table headers
colorTD      = colorBG                    # Table cells
colorFileDL  = Color( 0x99, 0xDD, 0x99 )  # File download available cell
colorFileNA  = Color( 0xDC, 0x99, 0x99 )  # File download not available cell
colorFrame   = Color( 0x00, 0x00, 0x00 )  # Table separator lines
colorGhosted = Color( 0x99, 0x77, 0x77 )  # File download not available text

## Package descriptions
#
descriptions = {
    'source' : 
        '''Core AROS sources.''',
    'contrib-source' : 
       '''Contributed programs\' sources.''',
    'i386-linux-system' : 
        '''The hosted version for Linux/i386. This is the most 
        complete and mature port, which means that you can run
        all included programs and demos with it. This archive
        contains all AROS system binaries compiled from the CVS
        tree.''',
    'i386-pc-boot-floppy' : 
        '''The native version for i386-based PC AT computers and 
        compatibles. This archive contains the boot 
        disk floppy image which you can quickly write to a disk 
        and boot AROS with.''',
    'i386-pc-boot-iso' : 
        '''The native version for i386-based PC AT computers and 
        compatibles. This is the bootable CDROM ISO image, which 
        contains all AROS system and contributed programs.''',
    'i386-all-contrib' : 
        '''This archive contains all the contributed programs 
        compiled for the i386 architecture. They will work in
        both the appropriate hosted (eg. i386-linux) and native
        (i386-pc) version.'''
}

## Package groups
#
# Each group is defined by a regular expression that is matched against
# the package name to decide whether a particular package belongs to
# the group.
#
groups = {
    'Sources'  : r'.*source',
    'Binaries' : r'i386-.*' 
}

## Path to the nightly build directory, relative to the CGI script
#
root  = '../htdocs/downloads/nightly'

## Functions #################################################################

def formatSize( size ):
    size  = float( size )
    units = ( 'B', 'kB', 'MB', 'GB' )

    for unit in units:
        if size <= 1000:
           return '%.2f %s' % (size, unit )
        else:
	   size = size / 1000 

## Process configuration #####################################################
#
# Change the structure of the groups and compile the regular expressions.
# For any specific group,
#     [0] is now the compiled regular expression, and
#     [1] is the list of packages this group contains. 
#
for group in groups.keys():
    groups[group] = [re.compile( groups[group] ), []]

## Process files #############################################################

oldcwd = os.getcwd()
os.chdir( root )
dates = glob.glob( '[0-9]*' )
dates.sort()
dates.reverse()
os.chdir( oldcwd )

packages = {}
for date in dates:
    for file in os.listdir( os.path.join( root, date ) ):
        # Remove the 'AROS-YYYYMMDD-' prefix and '.tar.bz2' suffix.
        package = file[14:][:-8]
        if package == '': continue
        if not packages.has_key( package ):
            packages[package] = []
        packages[package].append( date )

for package in packages.keys():
    for group in groups.keys():
        if groups[group][0].match( package ):
            groups[group][1].append( package )  

for group in groups.keys():
    groups[group][1].sort()

## Output HTML ###############################################################

span = len( dates )

print '''Content-Type: text/html\n\n'''
print '''
    <p>Nightly snapshots are done, as the name implies, automatically every night
    directly from the CVS tree and contain the latest code. However, they have
    not been tested in any way and can be horribly broken and extremely buggy 
    if you are unlucky. Most of the time though, they work just fine.</p>

    <p>Please report any bug you may discover while using these snapshots trough the
    <a href="http://sourceforge.net/tracker/?atid=439463&group_id=43586&func=browse">
    AROS bug tracking system</a>.</p>
 
    <p>For any other necessity, please feel free to contact us trough the 
    <a href="http://www.aros.org/mailman/listinfo/aros-user/">AROS Users Mailing
    List</a>.</p>
    
    <p><table class="layout" border="0" cellpadding="2" cellspacing="1" bgcolor="%(colorFrame)s">
        <tr bgcolor="%(colorTH)s">
            <td class="layout" width="35%%" rowspan="2"><b>Package</b></td>
            <td class="layout" align="center" colspan="%(span)d"><b>Date</b></td>
        </tr>
        <tr bgcolor="%(colorTH)s">
''' % vars()

column = span
for date in dates:
    color = Color.blend( colorFileDL, colorBG, span, column )
    year  = date[:4]
    month = date[4:6]
    day   = date[6:8]
    
    print '''
                <td class="layout" align="center" bgcolor="%(color)s">
                    <b>%(year)s-%(month)s-%(day)s</b><br>
                    [<a href="http://aros.sourceforge.net/downloads/nightly/%(date)s/logs">build logs</a>]
                </td>
    ''' % vars()

    column = column - 1

print '''         </tr>'''

for group in groups.keys():
    groupSpan = span + 1
    
    print '''
            <tr bgcolor="%(colorTH)s">
                <td class="layout" align="left" colspan="%(groupSpan)s"><b>%(group)s</b></td>
            </tr>
    ''' % vars()
        
    for package in groups[group][1]:
        description = descriptions.get( package, '' )
        
        print '''
                <tr valign="middle" bgcolor="%(colorTD)s">
                    <td class="layout" valign="top">
                        <p><i>%(package)s</i></p>
                        <p><font size="-1">%(description)s</font></p>
                    </td>
        ''' % vars()
        
        column = span

        for date in dates:
            if date in packages[package]:
                colorBlended = Color.blend( colorFileDL, colorBG, span, column )
            else:
                colorBlended = Color.blend( colorFileNA, colorBG, span, column )
                
            print '''
                        <td class="layout" align="center" bgcolor="%(colorBlended)s">
            ''' % vars()
            
            if date in packages[package]:
                file = 'AROS-' + date + '-' + package + '.tar.bz2'
                path = os.path.join( root, date, file )
                url  = 'http://aros.sourceforge.net/cgi-bin/nightly-download?%s/%s' % (date, file)
                size = formatSize( os.path.getsize( path ) )
                print '''
                <table class="layout" border="0" cellspacing="0" cellpadding="0">
                <tr>
                 <td class="layout" rowspan="2"><a href="%(url)s"><img border="0" src="images/disk.png"></a></td>
                 <td class="layout"><a href="%(url)s">Download</a>&nbsp;</td>
                </tr>
                <tr>
                 <td class="layout">%(size)s</td></tr>
                </tr></table>
                ''' % vars()
            else:
                print '''
                <font color="%(colorGhosted)s">not available</font>
                ''' % vars()
            print '''</td>'''
            
            column = column - 1
    
        print '''        </tr>'''

print '''
    </table></p>
'''
