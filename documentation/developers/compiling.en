==============
Compiling AROS
==============

:Authors:   + Flavio Stanchina
            + Henning Kiel
            + Bernardo Innocenti
            + Lennard voor den Dag
            + Aaron Digulla
            + Adam Chodorowski
:Copyright: Copyright © 2001-2003, The AROS Development Team
:Version:   $Revision$
:Date:      $Date$
:Status:    Done.
:Abstract:  
    This document will explain how to compile AROS. Development of AROS is 
    currently not self-hosted, which means that you cannot compile AROS from 
    inside AROS. To compile and develop for AROS, you will need a Linux or 
    FreeBSD system.


.. Contents::


Requirements
============

The following software is required for compiling AROS:

+ GCC 2.95.3+
+ GNU Binutils
+ GNU Make
+ GNU AWK (GAWK)
+ Bison
+ pngtopnm and ppmtoilbm (part of the netpbm package)
+ Autoconf
+ Automake
+ Common utilities like cp, mv, sort, uniq, head, ...


Sources
=======

You can download the AROS sources either from the `download page`__ or by 
using CVS (which requires that you `apply for access`__ though). In the former
case, getting the ``source`` package is enough (unless you also want to 
compile the contrib programs). In the latter case, you need to checkout the 
``AROS`` module, and also the ``necessary`` module if you want to compile the
i389-pc port.

__ ../../download
__ ../../documentation/developers/contribute#the-cvs-repository


Building
========

Configuring
-----------

First of all, you need to run configure in the root of the AROS sources::

    > cd AROS
    > ./configure

You can specify several options to configure. The following options are 
available for all targets:

``--enable-mungwall-debug [default: enabled]`` 
    Enable memory wall debug. This is useful for finding buffer overflows 
    and off-by-one loop bugs.

``--enable-stack-debug [default: enabled]``
    Enable stack debug.

``--enable-modules-debug [default: disabled]`` 
    Enable special module debug support (for libraries, devices and similar).

``--enable-debug [default: disabled]``
    Enable general debug.


.. Tip::
   
   Options on the form ``--enable-FEATURE`` can be reversed (ie. disabled 
   instead of enabled) by using ``--disable-FEATURE`` or ``enable-FEATURE=no``. 


Hosted AROS/i386-linux or AROS/i386-freebsd
"""""""""""""""""""""""""""""""""""""""""""

You do not have to specify the ``--target`` option to build these targets. 
The following options are available for hosted builds:

``--with-resolution=WIDTHxHEIGHTxDEPTH [default: 800x600x8]``
    Set the default resolution and depth AROS will use. 
    
``--enable-xshm-extension [default: enabled]``
    Enable usage of the X11 MIT-SHM extension. Enabling it gives a significant
    performance gain, but it might not work very well if you are using a 
    remote display.
    
You cannot crosscompile these ports.


Native AROS/i386-pc
"""""""""""""""""""

To build the i386-pc port, you need to pass ``--target=pc-i386`` to configure.
Additionally, the following i386-pc specific options are available:

``--with-serial-debug=N [default: disabled]``
    Enable serial debug, sending the output to port ``N``. 
    
You cannot crosscompile this port.


Compiling
---------

To start the compilation, simply run::

    > make


Hosted AROS/i386-linux or AROS/i386-freebsd
"""""""""""""""""""""""""""""""""""""""""""

If you are building a hosted i386-linux or i386-freebsd build, you should 
additionally also run the following to properly setup the keyboard support::

    > make default-x11keymaptable


Native AROS/i386-pc
"""""""""""""""""""

If you are building the native i386-pc port, you will find a bootable floppy
image at ``bin/pc-i386/gen/rom/boot/aros.bin`` after the compilation has 
finished. Aditionally, you can create a bootable ISO image by running::

    > make bootiso-pc-i386

The ISO image can be found at ``bin/pc-i386/gen/rom/boot/aros.iso``.


Appendix
========

Building several targets from the same source
---------------------------------------------
   
If you intend to compile several different targets from one source tree, then 
you first have to go through the configuration step for each of your targets. 
You can add targets at any time you want. The last target specified to 
configure is the default target.

To select a specific target when building, simply run make like this::

    > AROS_TARGET_ARCH=$ARCH AROS_TARGET_CPU=$CPU make
    
Where ``$ARCH`` is the architecture of the wanted build, and ``$CPU`` is the 
CPU. Eg., to build AROS/i386-pc you would run::

    > AROS_TARGET_ARCH=pc AROS_TARGET_CPU=i386 make

If you are building several ports that use the same CPU, you only have to 
specify ``AROS_TARGET_ARCH`` as the CPU will stay the same. 
