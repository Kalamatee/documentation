================
AROS 1.0 roadmap
================

:Authors:   Adam Chodorowski
:Copyright: Copyright © 2003, The AROS Development Team
:Version:   $Revision$
:Date:      $Date$
:Abstract:  
    This is a roadmap intended to outline the general direction of AROS 
    development up until the AROS 1.0 release, and list which requirements 
    must be fulfilled before we can release it. It is *not* meant to force 
    developers to work on certain things (which is not enforcable in an open 
    source project anyway) but should rather be seen as a recommendation and 
    indiciation in which direction we are working. Hopefully, this will help 
    organize the development effort and make us all work more in the same 
    direction.


Ports
-----

For AROS 1.0 to be released, these requirements must be fulfilled by the two
mandatory ports: i386-pc and i386-linux. Other ports are not seen as required
for 1.0, to keep the amount of work down.


Milestones
----------

0.1
    AmigaOS 3.1 API compatability, excluding parts which are deemed to be
    non-portable or obsolete and not worth the effort. Also, comprehensive
    developer documentation of this API must be available.
    
    To mark something as obsolete even though it is possible to implement in 
    a portable way should require good reasons; for example if it is very 
    rarely used by applications and the effort required to implement it is 
    substantial. Sound support (ie. audio.device) is specifically excluded 
    *in this milestone*, since it is a later milestone in itself.

    Details to follow...


0.2
    Partial AmigaOS 3.5 and 3.9 API compatability. We choose the parts that 
    we feel are useful and worthwhile to have, and ditch the rest. Also, 
    comprehensive developer documentation of this API must be available.
    
    For example, it seems *very* unlikely that we want ReAction compatability 
    since we have already chosen to standarize on Zune for the GUI toolkit
    (and implementing the ReAction API is not a trivial undertaking). Ofcourse, 
    this will have to be discussed properly before a detailed list is agreed 
    upon.
    
    Details to follow...    


0.3
    Finished Zune. This means:
    
    + Complete MUI API compatability.
    + Finished preferences program.
    + Comprehensive developer documentation.

    Details to follow...


0.4
    Standard applications comparable to those which come with AmigaOS 3.1.
    
    This does *not* mean that we have to have the exact same applications 
    which work exactly the same as in AmigaOS, but the functionality available
    to the user should be roughly equivalent. Wanderer falls under this 
    milestone. This milestone specifically does not include applications that
    require sound support, as this is not available at this point.

    Details to follow...

    
0.5.
    Sound support, meaning API compatability and basic applications. There 
    should be atleast one driver for each mandatory port. Also, comprehensive
    developer documentation of this API must be available.
    
    Details to follow...
    
    
0.6
    Networking support. This includes a TCP/IP-stack and some basic
    applications like email and SSH clients, and also a *simple* web browser.
    There should be atlease one NIC driver for each mandatory port. Also, 
    comprehensive developer documentation of this API must be available.
    
    The requirements on the web browser should not be high, but it should be
    possible to atleast browse the web in some way (even if it is only in text
    mode).
    
    Details to follow...
    
    
0.7
    Self-hosted development environment and SDK for developers. Specifically,
    this includes all software required to build AROS like GCC, GNU binutils,
    GNU make and the rest. It must be possible to compile AROS on AROS. This
    also includes comprehensive documentation of all the tools. 
    
    Also, the ABI for the supported architectures (only i386 at this point) 
    should be discussed and finalized. However, changes to the ABI are allowed
    to be made up until 1.0.
    
    Details to follow...
    
    
0.8
    Finished documentation for developers. Most of the work should already
    have been done in earlier milestones, so this is mostly a finalizing 
    step (proofreading, fixing bugs, checking that everything is properly
    documented in case we missed it previously, etc).
    
    Details to follow...
    
    
0.9
    Comprehensive documentation for users. This includes a complete command 
    reference and tutorials.
    
    Details to follow...


1.0
    Substantial testing and bug hunting complete. The 1.0 release should be
    virtually free of bugs, and be a *very* stable release. We should not have
    the fiascos some open source projects have had with their ".0" releases. 
        
    This will probably require an extended feature freeze, followed by a code
    freeze and several intermediate milestones (0.9.1, 0.9.2, 0.9.3, ...) for 
    user feedback and testing. Feature requests are not regarded as bugs, 
    unless it is something required (but missed) in the preceding milestones.
    For example, "we need a movie player" does not qualify, but "the text 
    editor should have a 'save' menu option" does.

    Also, at this point the ABI for supported architectures will be frozen
    until the next major (ie. 2.0) release.

    Details to follow...
