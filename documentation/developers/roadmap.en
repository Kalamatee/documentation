================
AROS 1.0 Roadmap
================

:Authors:   Adam Chodorowski, Sergey Mineychev
:Copyright: Copyright ¦ 2008, The AROS Development Team
:Version:   $Revision$
:Date:      $Date$

:Abstract:  
    This is a roadmap intended to outline the requirements that need to be
    fullfilled before AROS 1.0 can be released. It is *not* meant to force
    developers to work on certain things (since it's not possible in an open
    source project anyway) but should rather be seen as a recommendation
    where we would like people to focus their efforts. Hopefully, this will
    help organize the development effort and make us all work more in the
    same direction.

Ports
-----

For AROS 1.0 to be released, these requirements must be fulfilled by the
i386-pc and i386-linux ports (referred to as "mandatory ports" below).
Other ports are not seen as required for 1.0, to keep the amount of work
down.


Requirements
------------

1.  **AmigaOS 3.1 API compatibility.**
    
    We exclude parts which are deemed to be non-portable or obsolete 
    and not worth the effort and implement the remaining API.

    To mark something as obsolete even though it is possible to implement in a
    portable way should require good reasons; for example if it is very rarely
    used by applications and the effort required to implement it is
    substantial.  
    
    Current status: **In Progress**, 80% Completed, see `Status page`__
    

2.  **Partial AmigaOS 3.5 and 3.9 API compatibility.**

    We choose the parts that we feel are useful and worthwhile to have, and 
    ditch the rest. For example, it seems *very* unlikely that we want 
    ReAction compatibility since we have already chosen to standardize on Zune 
    for the GUI toolkit (and implementing the ReAction API is not a 
    trivial undertaking).

    Some parts of 3.5 and 3.9 are already implemented. They can be found in
    `Extensions`__ section of Status page
    
    Current status: **Skipped**
    
    *Reasoning: This goal is defined a in way that does not allow benchmarking
    its completeness.*
    

3.  **Completed GUI toolkit.**

    This means Zune must have complete MUI 3.8 API compatability and a finished 
    preferences program.
    
    Current status: **In Progress**


4.  **Standard applications comparable to those which come with AmigaOS 3.1.**
    
    This does *not* mean that we have to have the exact same applications which
    work exactly the same as in AmigaOS, but the functionality available to the
    user should be roughly equivalent.

    Current status: **In Progress**, 72% Completed, see `Programs page`__

                  
5.  **Sound support.**

    API compatibility and basic applications. There should be at least one driver 
    for each mandatory port. 
    
    Current status: **Completed**

    *Reasoning: Currently AHI is ported, and there`s some drivers (a few)
    for i386-port. AHI Preferences editor as well as MP3 player are available.*

        
6.  **Networking support.**

    This includes a TCP/IP-stack and some basicapplications like email and 
    SSH clients, and also a web browser. There should be at least one NIC 
    driver for each mandatory port. 
    
    The requirements on the web browser should not be high, but it should be
    possible to at least browse the web in some way.
    
    Current status: **In Progress**

    *Reasoning: AROSTCP we got now is ancient but working implementation of
    AmiTCP stack. Some applications were developed (i.e. the FTP and telnet client,
    IRC-client).*
    
    
7.  **Self-hosted development environment and SDK for developers.**

    Specifically, this includes all software required to build AROS like 
    GCC, GNU binutils, GNU make and the rest. It must be possible to compile 
    AROS on AROS. 
    
    The ABI for the supported architectures (only i386 at this point) must be
    finalized before 1.0. Once 1.0 is released, the ABI should be stable for a
    considerable time.
   
    Current status: **In Progress**

    
8.  **Comprehensive documentation for developers.**

    This includes reference manuals over all libraries, devices, 
    classes and development tools and also guides and tutorials to 
    introduce whole subsystems and give an overview. Also, a migration/porting 
    guide should be available.
    
    Current status: **In Progress**

    
9.  **Comprehensive documentation for users.**

    This includes a complete command reference, tutorials and installation-, 
    configuration- and other guides.
    
    Current status: **In Progress**

    *Reasoning: Documentation exists and extensively translated to different 
    languages. Still needs the tutorials and guides, and the help system to 
    be complete.*


10. **Substantial testing and bug hunting complete.**

    The 1.0 release should be virtually free of bugs, and be a *very* stable 
    release. We should not have the fiascos some open source projects 
    have had with their ".0" releases. 
        
    This will probably require an extended feature freeze, followed by a code
    freeze and several intermediate milestones for user feedback and testing.

    Feature requests are not regarded as bugs, unless it is something required
    (but missed) in the preceding milestones. For example, "we need a movie
    player" does not qualify, but "the text editor should have a 'save' menu
    option" does.

    Current status: **Not Started**

    *Reasoning: Currently no freeze can be done as features aren't complete
    yet. There`s still lot of unfixed bugs, but increasing users activity looks 
    promising. Bug hunting and accounting procedures and services are wanted.*

__ ../../introduction/status/everything
__ ../../introduction/status/extensions
__ ../../introduction/status/programs

--------------

Overall Status
--------------

As of 2008-11-13:

The main goal of AmigaOS 3.1 source compatibility is almost complete. Several modules
are still missing, but most of them will not be required to reach the goal. Out of 10
roadmap requirements, 1 is completed, 1 is skipped, 7 are in progress and 1 is not started.

Looking closer at the requirements in progress, the greatest amount of programming work
need to be performed to implement the ABI_V1 and complete Zune - the GUI toolkit.

Concerning the documentation, both topics (developer and user) require more work to
reach completion. From developer standpoint, a set of documents outlining creation
of basic software componens is required. User documentation needs to focus on
installation and configuration.

--------------

Recomendations
--------------

This section lists items that *still* need to be completed before each requirement
can be considered completed. This list is considered valid until next review of
AROS roadmap. During such periodic review, completed items are removed from the list.
It can also happen that some new items are added to the list or existing items are 
removed from the list - the decision should however be made carefully not to leave
out important features or prelong the release of 1.0 indefinatelly.

Next review of AROS 1.0 Roadmap: **June 2009**

Current recomentations:

1.  AmigaOS 3.1 API compatibility.
    
+ Implement printer.device and a PDF-printer driver
+ Implement FileSys.resource
+ Complete workbench.library

3.  Completed GUI toolkit. 

+ API completeness review
+ Further decision made after review

4.  Standard applications comparable to those which come with AmigaOS 3.1.
    
+ Implement printer preferences editor
+ Add AppIcon support to Wanderer
+ Add GUI for Format utility
        
6.  Networking support. 

+ Modern web browser - must adhere to modern HTML standards, JavaScript support
  is suggested but not required. Must have minimal usable GUI (prev/next/adress bar)
  Possible candidates: OWB, NetSurf, Rob's WebKit port.
+ Implement AROSTCP preferences editor
    
7.  Self-hosted development environment and SDK for developers. 

+ `ABI_V1`__ implemented and merged with main trunk
    - C library and ETask
    - dos.library compatibility
    - Retest changes on x86 natice
    - Write (i386) ABI reference manual
    - SysBase location
    - How to extend OS3.x shared libraries
    - Varargs handling
    - C library
+ Backport modular kernel architecture from x86_64 to i386 (mandatory ports)

__ http://aros.wiki.sourceforge.net/ABI_V1

8.  Comprehensive documentation for developers. 

+ Maintain up-to-date autodocs
+ Maintain up-to-date HIDD subsystem documentation
+ Write description of modular kernel architecture
+ Write explanation of AROS basic data type, use and relation to C data types
+ Write explanation of differences between resources, libraries, devices and handlers
+ Write description of graphics and usb HIDDs
+ Write following "How to" documents - these documents should cover the defined topic
  and be accompanied with a source code example of working modules:

    - How to compile modules and interact with AROS build system
    - How to compile modules outside AROS build system
    - How to write command line application
    - How to write BOOPSI application
    - How to write Zune application
    - How to write network application
    - How to write a commodity application
    - How to write a datatype
    - How to write AROSTCP network driver
    - How to write GFX HIDD driver
    - How to write AHI sound driver
    - How to write printer driver
    - How to write AROS dynamic library
    - How to write BOOPSI/Zune class
    - How to port \*nix software to AROS - Basics

+ Further topics definition needed
    
9.  Comprehensive documentation for users. 

+ Write following "How to" documents:
    - How to configure network manually
    - How to configure network with DHCP client
    - How to write AmigaOS scripts
+ Further topics definition needed

10. Substantial testing and bug hunting complete.

+ Complete items: 1, 3, 4, 6, 7
+ Feature freeze
+ Deliver release candidates schedule
