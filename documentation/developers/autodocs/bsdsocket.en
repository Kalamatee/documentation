=========
bsdsocket
=========

.. This document is automatically generated. Don't edit it!

`Index <index>`_

----------

======================================= ======================================= ======================================= ======================================= 
`CloseSocket`_                          `Dup2Socket`_                           `Errno`_                                `GetSocketEvents`_                      
`Inet_LnaOf`_                           `Inet_MakeAddr`_                        `Inet_NetOf`_                           `Inet_NtoA`_                            
`IoctlSocket`_                          `ObtainSocket`_                         `ReleaseCopyOfSocket`_                  `ReleaseSocket`_                        
`SetErrnoPtr`_                          `SetSocketSignals`_                     `SocketBaseTagList`_                    `WaitSelect`_                           
`accept`_                               `bind`_                                 `connect`_                              `getdtablesize`_                        
`gethostbyaddr`_                        `gethostbyname`_                        `gethostid`_                            `gethostname`_                          
`getnetbyaddr`_                         `getnetbyname`_                         `getpeername`_                          `getprotobyname`_                       
`getprotobynumber`_                     `getservbyname`_                        `getservbyport`_                        `getsockname`_                          
`getsockopt`_                           `inet_addr`_                            `inet_network`_                         `listen`_                               
`recv`_                                 `recvfrom`_                             `recvmsg`_                              `send`_                                 
`sendmsg`_                              `sendto`_                               `setsockopt`_                           `shutdown`_                             
`socket`_                               `vsyslog`_                              
======================================= ======================================= ======================================= ======================================= 

-----------

CloseSocket
===========

Synopsis
~~~~~~~~
::

 int CloseSocket(
          int s );


Dup2Socket
==========

Synopsis
~~~~~~~~
::

 int Dup2Socket(
          int fd1,
          int fd2 );


Errno
=====

Synopsis
~~~~~~~~
::

 LONG Errno();


GetSocketEvents
===============

Synopsis
~~~~~~~~
::

 LONG GetSocketEvents(
          ULONG * eventsp );


Inet_LnaOf
==========

Synopsis
~~~~~~~~
::

 unsigned long Inet_LnaOf(
          unsigned long in );


Inet_MakeAddr
=============

Synopsis
~~~~~~~~
::

 unsigned long Inet_MakeAddr(
          int net,
          int lna );


Inet_NetOf
==========

Synopsis
~~~~~~~~
::

 unsigned long Inet_NetOf(
          unsigned long in );


Inet_NtoA
=========

Synopsis
~~~~~~~~
::

 char * Inet_NtoA(
          unsigned long in );


IoctlSocket
===========

Synopsis
~~~~~~~~
::

 int IoctlSocket(
          int s,
          unsigned long request,
          char * argp );


ObtainSocket
============

Synopsis
~~~~~~~~
::

 LONG ObtainSocket(
          LONG id,
          LONG domain,
          LONG type,
          LONG protocol );


ReleaseCopyOfSocket
===================

Synopsis
~~~~~~~~
::

 LONG ReleaseCopyOfSocket(
          LONG sd,
          LONG id );


ReleaseSocket
=============

Synopsis
~~~~~~~~
::

 LONG ReleaseSocket(
          LONG sd,
          LONG id );


SetErrnoPtr
===========

Synopsis
~~~~~~~~
::

 void SetErrnoPtr(
          void * ptr,
          int size );


SetSocketSignals
================

Synopsis
~~~~~~~~
::

 void SetSocketSignals(
          ULONG intrmask,
          ULONG iomask,
          ULONG urgmask );


SocketBaseTagList
=================

Synopsis
~~~~~~~~
::

 ULONG SocketBaseTagList(
          struct TagItem * tagList );


WaitSelect
==========

Synopsis
~~~~~~~~
::

 int WaitSelect(
          int nfds,
          fd_set * readfds,
          fd_set * writefds,
          fd_set * exceptfds,
          struct timeval * timeout,
          ULONG * sigmask );


accept
======

Synopsis
~~~~~~~~
::

 int accept(
          int s,
          struct sockaddr * addr,
          int * addrlen );


bind
====

Synopsis
~~~~~~~~
::

 int bind(
          int s,
          struct sockaddr * name,
          int namelen );


connect
=======

Synopsis
~~~~~~~~
::

 int connect(
          int s,
          struct sockaddr * name,
          int namelen );


getdtablesize
=============

Synopsis
~~~~~~~~
::

 int getdtablesize();


gethostbyaddr
=============

Synopsis
~~~~~~~~
::

 struct hostent * gethostbyaddr(
          char * addr,
          int len,
          int type );


gethostbyname
=============

Synopsis
~~~~~~~~
::

 struct hostent * gethostbyname(
          char * name );


gethostid
=========

Synopsis
~~~~~~~~
::

 long gethostid();


gethostname
===========

Synopsis
~~~~~~~~
::

 int gethostname(
          char * name,
          int namelen );


getnetbyaddr
============

Synopsis
~~~~~~~~
::

 struct netent * getnetbyaddr(
          long net,
          int type );


getnetbyname
============

Synopsis
~~~~~~~~
::

 struct netent * getnetbyname(
          char * name );


getpeername
===========

Synopsis
~~~~~~~~
::

 int getpeername(
          int s,
          struct sockaddr * name,
          int * namelen );


getprotobyname
==============

Synopsis
~~~~~~~~
::

 struct protoent * getprotobyname(
          char * name );


getprotobynumber
================

Synopsis
~~~~~~~~
::

 struct protoent * getprotobynumber(
          int proto );


getservbyname
=============

Synopsis
~~~~~~~~
::

 struct servent * getservbyname(
          char * name,
          char * proto );


getservbyport
=============

Synopsis
~~~~~~~~
::

 struct servent * getservbyport(
          int port,
          char * proto );


getsockname
===========

Synopsis
~~~~~~~~
::

 int getsockname(
          int s,
          struct sockaddr * name,
          int * namelen );


getsockopt
==========

Synopsis
~~~~~~~~
::

 int getsockopt(
          int s,
          int level,
          int optname,
          void * optval,
          void * optlen );


inet_addr
=========

Synopsis
~~~~~~~~
::

 unsigned long inet_addr(
          const char * cp );


inet_network
============

Synopsis
~~~~~~~~
::

 unsigned long inet_network(
          const char * cp );


listen
======

Synopsis
~~~~~~~~
::

 int listen(
          int s,
          int backlog );


recv
====

Synopsis
~~~~~~~~
::

 int recv(
          int s,
          void * buf,
          int len,
          int flags );


recvfrom
========

Synopsis
~~~~~~~~
::

 int recvfrom(
          int s,
          void * buf,
          int len,
          int flags,
          struct sockaddr * from,
          int * fromlen );


recvmsg
=======

Synopsis
~~~~~~~~
::

 int recvmsg(
          int s,
          struct msghdr * msg,
          int flags );


send
====

Synopsis
~~~~~~~~
::

 int send(
          int s,
          const void * msg,
          int len,
          int flags );


sendmsg
=======

Synopsis
~~~~~~~~
::

 int sendmsg(
          int s,
          const struct msghdr * msg,
          int flags );


sendto
======

Synopsis
~~~~~~~~
::

 int sendto(
          int s,
          const void * msg,
          int len,
          int flags,
          const struct sockaddr * to,
          int tolen );


setsockopt
==========

Synopsis
~~~~~~~~
::

 int setsockopt(
          int s,
          int level,
          int optname,
          void * optval,
          int optlen );


shutdown
========

Synopsis
~~~~~~~~
::

 int shutdown(
          int s,
          int how );


socket
======

Synopsis
~~~~~~~~
::

 int socket(
          int domain,
          int type,
          int protocol );


vsyslog
=======

Synopsis
~~~~~~~~
::

 void vsyslog(
          int level,
          const char * format,
          LONG * args );


