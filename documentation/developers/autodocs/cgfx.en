====
cgfx
====

.. This document is automatically generated. Don't edit it!

`Index <index>`_

----------

======================================= ======================================= ======================================= ======================================= 
`AllocCModeListTagList`_                `BestCModeIDTagList`_                   `BltTemplateAlpha`_                     `CModeRequestTagList`_                  
`CVideoCtrlTagList`_                    `DoCDrawMethodTagList`_                 `ExtractColor`_                         `FillPixelArray`_                       
`FreeCModeList`_                        `GetCyberIDAttr`_                       `GetCyberMapAttr`_                      `InvertPixelArray`_                     
`IsCyberModeID`_                        `LockBitMapTagList`_                    `MovePixelArray`_                       `ReadPixelArray`_                       
`ReadRGBPixel`_                         `ScalePixelArray`_                      `UnLockBitMap`_                         `UnLockBitMapTagList`_                  
`WriteLUTPixelArray`_                   `WritePixelArray`_                      `WritePixelArrayAlpha`_                 `WriteRGBPixel`_                        

======================================= ======================================= ======================================= ======================================= 

-----------

AllocCModeListTagList
=====================

Synopsis
~~~~~~~~
::

 struct List * AllocCModeListTagList(
          struct TagItem * tags );


BestCModeIDTagList
==================

Synopsis
~~~~~~~~
::

 ULONG BestCModeIDTagList(
          struct TagItem * tags );


BltTemplateAlpha
================

Synopsis
~~~~~~~~
::

 void BltTemplateAlpha(
          APTR src,
          LONG srcx,
          LONG srcmod,
          struct RastPort * rp,
          LONG destx,
          LONG desty,
          LONG width,
          LONG height );


CModeRequestTagList
===================

Synopsis
~~~~~~~~
::

 ULONG CModeRequestTagList(
          APTR ,
          struct TagItem *  );


CVideoCtrlTagList
=================

Synopsis
~~~~~~~~
::

 void CVideoCtrlTagList(
          struct ViewPort * vp,
          struct TagItem  * tags );


DoCDrawMethodTagList
====================

Synopsis
~~~~~~~~
::

 void DoCDrawMethodTagList(
          struct Hook     * hook,
          struct RastPort * rp,
          struct TagItem  * tags );


ExtractColor
============

Synopsis
~~~~~~~~
::

 ULONG ExtractColor(
          struct RastPort * RastPort,
          struct BitMap   * SingleMap,
          ULONG Colour,
          ULONG sX,
          ULONG sY,
          ULONG Width,
          ULONG Height );


FillPixelArray
==============

Synopsis
~~~~~~~~
::

 ULONG FillPixelArray(
          struct RastPort * rp,
          UWORD destx,
          UWORD desty,
          UWORD width,
          UWORD height,
          ULONG pixel );


FreeCModeList
=============

Synopsis
~~~~~~~~
::

 void FreeCModeList(
          struct List * modeList );


GetCyberIDAttr
==============

Synopsis
~~~~~~~~
::

 ULONG GetCyberIDAttr(
          ULONG attribute,
          ULONG DisplayModeID );


GetCyberMapAttr
===============

Synopsis
~~~~~~~~
::

 ULONG GetCyberMapAttr(
          struct BitMap * bitMap,
          ULONG attribute );


InvertPixelArray
================

Synopsis
~~~~~~~~
::

 ULONG InvertPixelArray(
          struct RastPort * rp,
          UWORD destx,
          UWORD desty,
          UWORD width,
          UWORD height );


IsCyberModeID
=============

Synopsis
~~~~~~~~
::

 BOOL IsCyberModeID(
          ULONG modeID );


LockBitMapTagList
=================

Synopsis
~~~~~~~~
::

 APTR LockBitMapTagList(
          APTR bitmap,
          struct TagItem * tags );


MovePixelArray
==============

Synopsis
~~~~~~~~
::

 ULONG MovePixelArray(
          UWORD SrcX,
          UWORD SrcY,
          struct RastPort * RastPort,
          UWORD DstX,
          UWORD DstY,
          UWORD SizeX,
          UWORD SizeY );


ReadPixelArray
==============

Synopsis
~~~~~~~~
::

 ULONG ReadPixelArray(
          APTR dst,
          UWORD destx,
          UWORD desty,
          UWORD dstmod,
          struct RastPort * rp,
          UWORD srcx,
          UWORD srcy,
          UWORD width,
          UWORD height,
          UBYTE dstformat );


ReadRGBPixel
============

Synopsis
~~~~~~~~
::

 ULONG ReadRGBPixel(
          struct RastPort * rp,
          UWORD x,
          UWORD y );


ScalePixelArray
===============

Synopsis
~~~~~~~~
::

 LONG ScalePixelArray(
          APTR srcRect,
          UWORD SrcW,
          UWORD SrcH,
          UWORD SrcMod,
          struct RastPort * RastPort,
          UWORD DestX,
          UWORD DestY,
          UWORD DestW,
          UWORD DestH,
          UBYTE SrcFormat );


UnLockBitMap
============

Synopsis
~~~~~~~~
::

 void UnLockBitMap(
          APTR Handle );


UnLockBitMapTagList
===================

Synopsis
~~~~~~~~
::

 void UnLockBitMapTagList(
          APTR Handle,
          struct TagItem * Tags );


WriteLUTPixelArray
==================

Synopsis
~~~~~~~~
::

 LONG WriteLUTPixelArray(
          APTR srcRect,
          UWORD SrcX,
          UWORD SrcY,
          UWORD SrcMod,
          struct RastPort * rp,
          APTR CTable,
          UWORD DestX,
          UWORD DestY,
          UWORD SizeX,
          UWORD SizeY,
          UBYTE CTabFormat );


WritePixelArray
===============

Synopsis
~~~~~~~~
::

 ULONG WritePixelArray(
          APTR src,
          UWORD srcx,
          UWORD srcy,
          UWORD srcmod,
          struct RastPort * rp,
          UWORD destx,
          UWORD desty,
          UWORD width,
          UWORD height,
          UBYTE srcformat );


WritePixelArrayAlpha
====================

Synopsis
~~~~~~~~
::

 ULONG WritePixelArrayAlpha(
          APTR src,
          UWORD srcx,
          UWORD srcy,
          UWORD srcmod,
          struct RastPort * rp,
          UWORD destx,
          UWORD desty,
          UWORD width,
          UWORD height,
          ULONG globalalpha );


WriteRGBPixel
=============

Synopsis
~~~~~~~~
::

 LONG WriteRGBPixel(
          struct RastPort * rp,
          UWORD x,
          UWORD y,
          ULONG pixel );


